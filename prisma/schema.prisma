generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model m {
  id        Int       @id @default(autoincrement())
  username  String    @db.VarChar(255)
  message   String    @db.Text
  roomId    String?   @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.DateTime(0)
}

model bookings {
  id_booking       Int           @id @default(autoincrement())
  id_user          Int?
  id_destination   Int?
  booking_price    Decimal?      @db.Decimal(10, 2)
  destination_name String?       @db.VarChar(255)
  created_at       DateTime?     @default(now()) @db.Timestamp(0)
  updated_at       DateTime?     @default(now()) @db.Timestamp(0)
  users            users?        @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Restrict, map: "bookings_ibfk_1")
  destinations     destinations? @relation(fields: [id_destination], references: [id_destination], onDelete: Cascade, onUpdate: Restrict, map: "bookings_ibfk_2")

  @@index([id_destination], map: "id_destination")
  @@index([id_user], map: "id_user")
}

model clients {
  id_client       Int             @id @default(autoincrement())
  username_client String          @db.VarChar(255)
  phone_client    String?         @db.VarChar(255)
  email_client    String?         @db.VarChar(255)
  content_client  String?         @db.VarChar(255)
  status_client   String?         @db.VarChar(255)
  created_at      DateTime?       @default(now()) @db.Timestamp(0)
  updated_at      DateTime?       @default(now()) @db.Timestamp(0)
  notifications   notifications[]
}

model comments {
  id_comment      Int           @id @default(autoincrement())
  id_user         Int?
  id_destination  Int?
  content_comment String        @db.VarChar(255)
  created_at      DateTime?     @default(now()) @db.Timestamp(0)
  updated_at      DateTime?     @default(now()) @db.Timestamp(0)
  users           users?        @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Restrict, map: "comments_ibfk_1")
  destinations    destinations? @relation(fields: [id_destination], references: [id_destination], onDelete: Cascade, onUpdate: Restrict, map: "comments_ibfk_2")

  @@index([id_destination], map: "id_destination")
  @@index([id_user], map: "id_user")
}

model destinations {
  id_destination                            Int             @id @default(autoincrement())
  name_destination                          String          @db.VarChar(255)
  location                                  String?         @db.VarChar(255)
  country                                   String?         @db.VarChar(255)
  rating                                    Decimal?        @db.Decimal(3, 2)
  id_comment_user                           Int?
  estimated_price                           Decimal?        @db.Decimal(10, 2)
  id_user                                   Int?
  created_at                                DateTime?       @default(now()) @db.Timestamp(0)
  updated_at                                DateTime?       @default(now()) @db.Timestamp(0)
  bookings                                  bookings[]
  comments                                  comments[]
  users_destinations_id_comment_userTousers users?          @relation("destinations_id_comment_userTousers", fields: [id_comment_user], references: [id_user], onUpdate: Restrict, map: "destinations_ibfk_1")
  users_destinations_id_userTousers         users?          @relation("destinations_id_userTousers", fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Restrict, map: "destinations_ibfk_2")
  notifications                             notifications[]
  photos                                    photos[]

  @@index([id_comment_user], map: "id_comment_user")
  @@index([id_user], map: "id_user")
}

model notifications {
  id_notification        Int           @id @default(autoincrement())
  content_notification   String        @db.VarChar(255)
  id_user                Int?
  subjection_client      Int?
  subjection_destination Int?
  status_notification    String?       @db.VarChar(255)
  created_at             DateTime?     @default(now()) @db.Timestamp(0)
  updated_at             DateTime?     @default(now()) @db.Timestamp(0)
  users                  users?        @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Restrict, map: "notifications_ibfk_1")
  clients                clients?      @relation(fields: [subjection_client], references: [id_client], onDelete: Cascade, onUpdate: Restrict, map: "notifications_ibfk_2")
  destinations           destinations? @relation(fields: [subjection_destination], references: [id_destination], onDelete: Cascade, onUpdate: Restrict, map: "notifications_ibfk_3")

  @@index([id_user], map: "id_user")
  @@index([subjection_client], map: "subjection_client")
  @@index([subjection_destination], map: "subjection_destination")
}

model photos {
  id_photo       Int           @id @default(autoincrement())
  link_photo     String        @db.VarChar(255)
  id_user        Int?
  id_destination Int?
  created_at     DateTime?     @default(now()) @db.Timestamp(0)
  updated_at     DateTime?     @default(now()) @db.Timestamp(0)
  users          users?        @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Restrict, map: "photos_ibfk_1")
  destinations   destinations? @relation(fields: [id_destination], references: [id_destination], onDelete: Cascade, onUpdate: Restrict, map: "photos_ibfk_2")

  @@index([id_destination], map: "id_destination")
  @@index([id_user], map: "id_user")
}

model users {
  id_user                                          Int             @id @default(autoincrement())
  username                                         String          @db.VarChar(255)
  password                                         String          @db.VarChar(255)
  birthday                                         DateTime?       @db.Date
  hobby                                            String?         @db.VarChar(255)
  address_user                                     String?         @db.VarChar(255)
  marital_status                                   String?         @db.VarChar(255)
  account_status                                   String?         @db.VarChar(255)
  avatar_user                                      String?         @db.VarChar(255)
  phone_user                                       String?         @db.VarChar(255)
  created_at                                       DateTime?       @default(now()) @db.Timestamp(0)
  updated_at                                       DateTime?       @default(now()) @db.Timestamp(0)
  bookings                                         bookings[]
  comments                                         comments[]
  destinations_destinations_id_comment_userTousers destinations[]  @relation("destinations_id_comment_userTousers")
  destinations_destinations_id_userTousers         destinations[]  @relation("destinations_id_userTousers")
  notifications                                    notifications[]
  photos                                           photos[]
}
