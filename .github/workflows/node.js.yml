# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy to VPS BACKEND_040824

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # - name: Display GitHub Username
    #   run: echo "Repository:" ${{ github.repository }}

    # - name: Display actor Name
    #   run: echo "Actor:" ${{ github.actor }}

    # - name: Display server VPS_IP
    #   run: echo "VPS_IP:" ${{ secrets.VPS_IP }}

    # - name: Display server VPS_PASSWORD
    #   run: echo "VPS_PASSWORD:" ${{ secrets.VPS_PASSWORD }}

    - name: SSH to VPS and update project
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}  # Sử dụng nếu bạn dùng mật khẩu cho SSH
        # key: ${{ secrets.VPS_SSH_KEY }}  # Sử dụng nếu bạn dùng khóa SSH
        script: |
          echo "Checking if the project directory exists..."
          if [ -d "/root/selcoool_nestjs" ]; then
            echo "Tồn tại thư mục dự án"
            cd /root/selcoool_nestjs
      
            git pull
            docker-compose -f docker-compose-selcoool_nestjs.yml up -d --build         
          else          
            echo "Không hề tồn tại thư mục dự án"
            mkdir -p /root/selcoool_nestjs
            cd /root/selcoool_nestjs

            git clone https://github.com/${{ github.repository }} /root/selcoool_nestjs
            docker-compose -f docker-compose-selcoool_nestjs.yml up -d
          fi
          echo "Hoàn thành công việc update API selcoool_nestjs. Chúc mừng bạn đã hoàn thành"



# name: Deploy to VPS BACKEND_040222311

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     timeout-minutes: 20
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: SSH to VPS and update project
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.VPS_IP }}
#         username: ${{ secrets.VPS_USERNAME }}
#         password: ${{ secrets.VPS_PASSWORD }}  # Sử dụng nếu bạn dùng mật khẩu cho SSH
#         script: |
#           echo "Checking if the project directory exists..."
#           if [ -d "/root/selcoool_nestjs" ]; then
#             echo "Tồn tại thư mục dự án"
#             cd /root/selcoool_nestjs

#             git pull
#             docker-compose -f docker-compose-selcoool_nestjs.yml up -d --build --timeout 3000
#             docker system prune -f
#             # Restart Nginx
#             cd ~
#             docker-compose -f docker-compose-nginx.yml restart nginx
#           else
#             echo "Không hề tồn tại thư mục dự án"
#             mkdir -p /root/selcoool_nestjs
#             cd /root/selcoool_nestjs

#             git clone https://github.com/${{ github.repository }} /root/selcoool_nestjs
#             docker-compose -f docker-compose-selcoool_nestjs.yml up -d --timeout 3000
#             docker system prune -f
#             # Restart Nginx
#             cd ~
#             docker-compose -f docker-compose-nginx.yml restart nginx
#           fi
#           echo "Hoàn thành công việc update API project_nestjs. Chúc mừng bạn đã hoàn thành"

        # script: |
        #   echo "Xoa thu muc du an"
        #   rm -rf /root/project_nestjs
        #   echo "Xoa images and container"
          
        #   docker stop $(docker ps -aq) || true
        #   docker rm $(docker ps -aq) || true
        #   docker rmi $(docker images -q) || true
        #   docker-compose -f docker-compose-api-project_nestjs.yml down
        #   docker system prune -a -f
        #   sudo systemctl restart docker
        #   echo "Xoa du an 1"





